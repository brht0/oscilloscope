#version 430

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
layout(rgba32f, binding=0) uniform image2D screen;

uniform int screenW;
uniform int screenH;

vec4 avg(ivec2 pixel){
    const float kernel[3*3] = {
        1.0/16.0, 2.0/16.0, 1.0/16.0,
        2.0/16.0, 4.0/16.0, 2.0/16.0,
        1.0/16.0, 2.0/16.0, 1.0/16.0
    };

    vec4 sum = vec4(0.0);

    for(int y=-1; y<=1; y++){
        for(int x=-1; x<=1; x++){
            sum += imageLoad(screen, ivec2(pixel.x+x, pixel.y+y)) * kernel[(y+1)*3+x+1];
        }
    }
    return sum;
}

void main(){
    ivec2 pixel = ivec2(gl_WorkGroupID.xy) * 16 + ivec2(gl_LocalInvocationID.xy);

    vec4 color = avg(pixel);
    barrier();
    imageStore(screen, pixel, color);
}
